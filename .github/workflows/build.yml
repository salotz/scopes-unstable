name: Scopes Nightly
on:
  push:
  workflow_dispatch:
#   schedule:
#     - cron: "0 0 * * 0"
jobs:
  linux:
    runs-on: ubuntu-22.04
    outputs:
      revision: ${{ steps.revision.outputs.scopes-revision }}
    steps:

      - name: Cache last revision
        id: cache-revision
        uses: actions/cache@v3
        env:
          cache-name: cache-revision
        with:
          path: ./last-revision.env
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./last-revision.env') }}
      
      - id: revision
        name: Resolve the current scopes revision
        run: |
          echo "scopes-revision=$(hg identify https://hg.sr.ht/~duangle/scopes/)" >> $GITHUB_OUTPUT

          # write out to a file, we can cache this and try not to
          # rerun if it still matches for next pipeline
          echo $GITHUB_OUTPUT > ./last-version.env

      - name: Install build dependencies
        run: sudo apt install mkdocs python3-pip libtinfo5
      - name: Install MajorEO Package Manager
        run: |

          # install eo package manager
          curl -S --no-progress-meter \
              https://hg.sr.ht/~duangle/majoreo/raw/eo \
                  | python3 - init majoreo

      - name: Fetch Scopes Source Code and Build Recipes
        run: |

          # fetch the recipe
          ./bin/eo import scopes
          
          # fetch the source code via the "source code" package
          ./bin/eo install -y scopes-source-unstable
          
          # patch genie recipe from the source code
          curl -S --no-progress-meter \
              "https://raw.githubusercontent.com/ScopesCommunity/scopes-unstable/main/workarounds/genie.eo" \
              -o ./external/recipes/genie.eo

      - name: Cache downloaded dependencies
        id: cache-eo
        uses: actions/cache@v3
        env:
          cache-name: cache-eo-downloads
        with:
          path: ./.eo/dlcache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('external/recipes/*.eo') }}
              
      - name: Install & Build Dependencies
        run: |

          ./bin/eo install -y genie clang clang-runtime spirv-tools spirv-cross pcre lmdb libffi
          ./bin/eo sync

      - name: Build Scopes
        run: |

          ./bin/genie gmake
          make -j$(nproc) -C build config=release

      - name: Test
        id: test
        env:
          GH_RUN_NUMBER: ${{ github.run_number }}
        run: |

          ./bin/scopes -v

          # get the version number, construct the build version and save to outputs
          next_version="$(./bin/scopes -v | head -n 1 | awk '{print $2}')"
          build_version="${next_version}-pre${GH_RUN_NUMBER}"

          echo "Current in-source version number: ${next_version}"
          echo "Build version: $build_version"
          
          echo "scopes-next-version=${next_version}" >> $GITHUB_OUTPUT
          echo "scopes-build-version=" >> $GITHUB_OUTPUT

      - name: Package artifact
        run: |
          
          tar -czf \
              scopes-linux-${{ steps.test.outputs.scopes-build-version }}.tar.gz \
              bin/ doc/ include/ lib/ testing/ CREDITS.md LICENSE.md

      - name: Distribution Artifact
        uses: actions/upload-artifact@v3
        with:
          name: scopes-unstable-linux
          path: scopes-unstable-linux.tar.gz

      - name: Standalone Documentation
        uses: actions/upload-artifact@v3
        with:
          name: scopes-unstable-docs
          path: doc/

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          prerelease: true
          files: scopes-linux-${{ steps.test.outputs.scopes-build-version }}.tar.gz
          name: ${{ steps.revision.outputs.scopes-revision }}
          body: "Pre-release 'nightly' build of Scopes from revision ${{ steps.revision.outputs.scopes-revision }}"
            

  # DEBUG: turning off for efficiency
  # windows:
  #   runs-on: windows-latest
  #   needs: linux
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - uses: msys2/setup-msys2@v2
  #     - name: Install build dependencies
  #       run: pacman -S --noconfirm make mingw64/mingw-w64-x86_64-python mingw64/mingw-w64-x86_64-python-pip zip unzip mingw64/mingw-w64-x86_64-gcc mingw64/mingw-w64-x86_64-libxml2
  #     - name: Build
  #       run: |
  #         wget "https://hg.sr.ht/~duangle/majoreo/raw/eo" -O ./eo
  #         chmod +x ./eo
  #         ./eo init
  #         ./eo import scopes
  #         ./eo install -y scopes-unstable
  #     - name: Cleanup
  #       run: |
  #         rm -f ./bin/eo ./bin/genie.exe
  #     - run: zip -r scopes-unstable-windows-${{ needs.linux.outputs.revision }}.zip bin/ doc/ include/ lib/ testing/ CREDITS.md LICENSE.md
  #     - name: Distribution Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: scopes-unstable-windows-${{ needs.linux.outputs.revision }}
  #         path: scopes-unstable-windows-${{ needs.linux.outputs.revision }}.zip
